#!/bin/bash

CONF_DIR="/etc/PARANOiA/"
source "$CONF_DIR/paranoia.conf"

# Mounts the removable drive
function mountparanoia {
	drive="$1"

	HALFKEY_SPOT="/mnt/half-key"
	[[ ! -d "$HALFKEY_SPOT" ]] && mkdir "$HALFKEY_SPOT"
	mount "$drive" "$HALFKEY_SPOT"
	[[ ! -d "$HALFKEY_SPOT/PARANOiA" ]] && mkdir "$HALFKEY_SPOT/PARANOiA"
}

# Unmounts the removable drive
function unmountparanoia {
	umount "$HALFKEY_SPOT" &&
		[[ ! "$(ls -A $HALFKEY_SPOT)" ]] && rm -r "$HALFKEY_SPOT"
	unset HALFKEY_SPOT
}

# PARANOiA init [left] [right]
if [[ $1 == "init" ]]; then
	left="$2"
	right="$3"
	klen=45

	if [[ -z "$left" || -z "$right" ]]; then
		# Check parameters for completeness
		cat <<END
Usage: PARANOiA init [img] [img]
Embeds two pictures each with a cryptographic half-key stored in the
ImageDescription EXIF data section and uses them to initialize the
PARANOiA cryptosystem
END
		exit 1
	fi

	# Mount the drive
	mountparanoia "$CONF_USB"

	if [[ ! -z "$HALFKEY_SPOT/PARANOiA/right-half.jpg" ||
		! -z "$CONF_DIR/left-half.jpg" ]]; then
		cat <<END
You seem to already have a PARANOiA key installed! Please check this key (at
$CONF_DIR and/or on your device ($CONF_USB); if you REALLY want to generate a
new key, please type YES [all caps]:
END
		read -p "Really delete? [YES/no]: " reallydoit
		if [[ $reallydoit != "YES" ]]; then
			cat <<END
Got it, then I'm not touching anything! (*・ω・)ﾉ
END
			unmountparanoia $HALFKEY_SPOT
			exit 0
		fi
	fi

	# Key generation...
	lkey=$(openssl rand -base64 $klen)
	rkey=$(openssl rand -base64 $klen)

	echo "Converting pictures to common formats..."
	convert "$left" -resize 500x500 -quality 90% /tmp/left-half.jpg
	convert "$right" -resize 500x500 -quality 90% /tmp/right-half.jpg

	echo "Embedding key metadata..."
	exif -c --ifd=0 --set-value="$lkey" -t ImageDescription -m \
		-o left-half.jpg /tmp/left-half.jpg > /dev/null 2>&1
	exif -c --ifd=0 --set-value="$rkey" -t ImageDescription -m \
		-o right-half.jpg /tmp/right-half.jpg > /dev/null 2>&1
	shred -u /tmp/left-half.jpg /tmp/right-half.jpg

	# Consolidate
	mv "left-half.jpg" "$HALFKEY_SPOT/PARANOiA/"
	mv "right-half.jpg" "$CONF_DIR/"

	unmountparanoia "$halfkeymount"
fi

# PARANOiA add [device|file] [friendlyname]
if [[ $1 == "add" ]]; then
	device="$2"
	friendlyname="$3"

	mountparanoia "$CONF_USB"

	left="$HALFKEY_SPOT/PARANOiA/left-half.jpg"
	right="$CONF_DIR/right-half.jpg"
	unlock="key.asc"

	lkey=$(exif --ifd=0 -t ImageDescription -m $left)
	rkey=$(exif --ifd=0 -t ImageDescription -m $right)
	echo "$lkey$rkey" > $unlock

	echo "Adding your key to the LUKS device: $device"
	cryptsetup luksAddKey "$device" "$unlock"

	[[ ! -d "$CONF_DIR/devices" ]] && mkdir "$CONF_DIR/devices"
	cat <<END > "$CONF_DIR/devices/$friendlyname.conf"
DEVICE_TYPE=file
DEVICE_PATH="$device"
DEVICE_NAME="$friendlyname"
END

	unmountparanoia
	shred -u "$unlock"
fi

if [[ "$1" == "unlock-all" ]]; then
	mountparanoia "$CONF_USB"

	left="$HALFKEY_SPOT/PARANOiA/left-half.jpg"
	right="$CONF_DIR/right-half.jpg"
	unlock="key.asc"

	lkey=$(exif --ifd=0 -t ImageDescription -m $left)
	rkey=$(exif --ifd=0 -t ImageDescription -m $right)
	echo "$lkey$rkey" > $unlock

	for f in $CONF_DIR/devices/*; do
		source "$f"
		cryptsetup open --key-file "$unlock" "$DEVICE_PATH" "$DEVICE_NAME"
		cat <<END
Unlocked $DEVICE_PATH (/dev/mapper/$DEVICE_NAME)
END
	done

	unmountparanoia "$HALFKEY_SPOT"
	shred -u "$unlock"
fi

if [[ "$1" == "unlock" ]]; then
	device="$2"
	mountparanoia "$CONF_USB"

	left="$HALFKEY_SPOT/PARANOiA/left-half.jpg"
	right="$CONF_DIR/right-half.jpg"
	unlock="key.asc"

	lkey=$(exif --ifd=0 -t ImageDescription -m $left)
	rkey=$(exif --ifd=0 -t ImageDescription -m $right)
	echo "$lkey$rkey" > $unlock

	devfile="$CONF_DIR/devices/$device.conf"
	if [[ -z "$devfile" ]]; then
		cat <<END
No such file $devfile; have you added it to the cryptosystem yet? (hint:
PARANOiA add)...
END
	fi

	source "$devfile"
	if [[ -z "$DEVICE_PATH" ]]; then
		cat <<END
Couldn't stat file at $DEVICE_PATH; that's weird! (＃＞＜)
END
	shred -u "$unlock"
	exit 1
	fi

	cryptsetup open --key-file "$unlock" "$DEVICE_PATH" "$device"

	unmountparanoia "$HALFKEY_SPOT"
	shred -u "$unlock"
fi

if [[ "$1" == "help" ]]; then
	cat <<END
Usage: PARANOiA [command] [...]
PARANOiA is a cryptosystem for securing LUKS devices using a "double half-key"
system split between the host-system and a flash drive.

Configuration read from: /etc/PARANOiA/paranoia.conf

Commands:
	add [device|file] [name]
		Allows the luks container to be unlocked by the PARANOiA system
	init [left] [right]
		Initialize the PARANOiA system with the [left] and [right] images
	unlock-all
		Attempt to unlock all devices known to the PARANOiA system
END
fi
